---------------NASM---------------



nasm -g hello.asm -felf64 -o hello.o
ld -o hello hello.o ; собираем исполняемый файл

nasm -E hello.asm ; делает файл, который нескомпилирован, но через который прошел препроцессор


----------------GDB---------------
0. Создаем .gdbinit с:
set auto-load safe-path /
set disassembly-flavor intel

1. Запускаем gdb
2. В GDB:
file hello
break _start
layout asm
layout regs
3. Доп:

run ;запускает выполнение программы;

break <метка> ;ставит точку останова на метку. Во время работы программы с подключенным отладчиком она будет останавливаться как только доходит до такой точки;

break *<адрес> ;ставит точку останова на определённый адрес;

continue ;продолжает выполнение программы;

stepi ;(сокращённо si) выполняет ровно одну инструкцию;

nexti ;(сокращённо ni) выполняет ровно одну инструкцию, но не заходит в функции, вызванные с помощью инструкции ассемблера call. Будет выполнена вся функция и программа остановится на следующей в коде после call инструкции.

layout ;переключается между режимами интерфейса, см. далее.

----

print /FMT <val> ;позволяет посмотреть содержимое регистров или памяти. Регистры предваряются долларом, например, print /x $rax.

x /FMT <address> ;позволяет смотреть содержимое памяти. Он отличается от print тем, что принимает адрес, т.е. имеет один уровень косвенности.

